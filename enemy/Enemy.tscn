[gd_scene load_steps=12 format=2]

[ext_resource path="res://player/bullet.png" type="Texture" id=3]
[ext_resource path="res://audio/sound_hit.wav" type="AudioStream" id=4]
[ext_resource path="res://audio/sound_explode.wav" type="AudioStream" id=5]

[sub_resource type="PhysicsMaterial" id=1]

[sub_resource type="GDScript" id=7]
script/source = "class_name Enemy
extends RigidBody2D

const WALK_SPEED = 50

enum State {
	WALKING, #roaming
	DYING,
	CHASING,
}

var state = State.WALKING

var direction = -1
var anim = \"\"

var Bullet = preload(\"res://player/bullet.gd\")
onready var Player = get_tree().get_root().find_node(\"Player\", true, false)

onready var rc_left = $RaycastLeft
onready var rc_right = $RaycastRight
onready var rc_wall_left = $RayCastWallLeft
onready var rc_wall_right = $RayCastWallRight

func _integrate_forces(s):
	var lv = s.get_linear_velocity()
	var new_anim = anim

	if state == State.DYING:
		new_anim = \"explode\"
	elif state == State.WALKING:
		new_anim = \"walk\"

		var wall_side = 0.0

		for i in range(s.get_contact_count()):
			var cc = s.get_contact_collider_object(i)
			var dp = s.get_contact_local_normal(i)

			if cc:
				if cc is Bullet and not cc.disabled:
					# enqueue call
					call_deferred(\"_bullet_collider\", cc, s, dp)
					break

			if dp.x > 0.9:
				wall_side = 1.0
			elif dp.x < -0.9:
				wall_side = -1.0

		if wall_side != 0 and wall_side != direction:
			direction = -direction
			($Sprite as Sprite).scale.x = -direction
		if direction < 0 and not rc_left.is_colliding() and rc_right.is_colliding():
			direction = -direction
			($Sprite as Sprite).scale.x = -direction
		elif direction > 0 and not rc_right.is_colliding() and rc_left.is_colliding():
			direction = -direction
			($Sprite as Sprite).scale.x = -direction

		lv.x = direction * WALK_SPEED
	elif state == State.CHASING:
		new_anim = \"walk\"
			
		for i in range(s.get_contact_count()):
			var cc = s.get_contact_collider_object(i)
			var dp = s.get_contact_local_normal(i)

			if cc:
				if cc is Bullet and not cc.disabled:
					# enqueue call
					call_deferred(\"_bullet_collider\", cc, s, dp)
					break
					

			
		var motion = Vector2.ZERO
		var pos = get_position()
		motion += pos.direction_to(Player.position)
		lv.x = motion.x * WALK_SPEED
			
		if rc_wall_left.is_colliding():
			lv.y = -250
			lv.x = 10 * -WALK_SPEED
		elif rc_wall_right.is_colliding():
			lv.y = -250
			lv.x = 10 * WALK_SPEED


			


	if anim != new_anim:
		anim = new_anim
		($AnimationPlayer as AnimationPlayer).play(anim)

	s.set_linear_velocity(lv)


func _die():
	queue_free()


func _pre_explode():
	#make sure nothing collides against this
	$Shape1.queue_free()
	$Shape2.queue_free()
	$Shape3.queue_free()

	# Stay there
	mode = MODE_STATIC
	($SoundExplode as AudioStreamPlayer2D).play()


func _bullet_collider(cc, s, dp):
	mode = MODE_RIGID
	state = State.DYING

	s.set_angular_velocity(sign(dp.x) * 33.0)
	physics_material_override.friction = 1
	cc.disable()
	($SoundHit as AudioStreamPlayer2D).play()
	
#DEBUG ONLY!!
func _process(delta):
	#target player
	if (Input.is_key_pressed(KEY_J)):
		state = State.CHASING
"

[sub_resource type="Animation" id=2]
length = 6.0
step = 0.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Explosion:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.8, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "_pre_explode"
}, {
"args": [  ],
"method": "_die"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.5, 1.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=3]
length = 6.75
loop = true
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.75, 1.5, 2.25, 3, 3.75, 4.5, 5.25, 6, 6.75 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 5, 6, 5, 6, 5, 6, 7, 6, 7, 5 ]
}

[sub_resource type="Animation" id=4]
length = 1.25
loop = true
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5, 0.75, 1, 1.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 0 ]
}

[sub_resource type="StreamTexture" id=8]
load_path = "res://.import/enemy.png-1891d9038eeed672a2459bc4e7db5910.stex"

[sub_resource type="CircleShape2D" id=5]
radius = 7.0

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.5, 1 )
colors = PoolColorArray( 1, 1, 1, 0.501961, 0, 0, 0, 0 )

[node name="Enemy" type="RigidBody2D"]
mode = 2
physics_material_override = SubResource( 1 )
contacts_reported = 4
script = SubResource( 7 )

[node name="Enabler" type="VisibilityEnabler2D" parent="."]
position = Vector2( 8.12845, 5.5017 )
scale = Vector2( 11.7528, 5.43145 )
pause_particles = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/explode = SubResource( 2 )
anims/idle = SubResource( 3 )
anims/walk = SubResource( 4 )

[node name="Sprite" type="Sprite" parent="."]
texture = SubResource( 8 )
hframes = 8
frame = 4

[node name="Shape1" type="CollisionShape2D" parent="."]
position = Vector2( -0.54036, -1.08072 )
shape = SubResource( 5 )

[node name="Shape2" type="CollisionShape2D" parent="."]
position = Vector2( 3.24216, 1.62108 )
shape = SubResource( 5 )

[node name="Shape3" type="CollisionShape2D" parent="."]
position = Vector2( -6.2475, 1.76707 )
shape = SubResource( 5 )

[node name="RaycastLeft" type="RayCast2D" parent="."]
position = Vector2( -14, -4.672 )
enabled = true
cast_to = Vector2( 0, 22.5 )

[node name="RaycastRight" type="RayCast2D" parent="."]
position = Vector2( 11, -4.672 )
enabled = true
cast_to = Vector2( 0, 22.5 )

[node name="Explosion" type="CPUParticles2D" parent="."]
modulate = Color( 1, 1, 1, 0.685843 )
emitting = false
amount = 32
lifetime = 0.5
one_shot = true
speed_scale = 1.2
explosiveness = 0.76
texture = ExtResource( 3 )
emission_shape = 1
emission_sphere_radius = 8.0
spread = 180.0
gravity = Vector2( 0, 0 )
initial_velocity = 120.0
initial_velocity_random = 0.5
angle_random = 1.0
scale_amount_random = 1.0
color_ramp = SubResource( 6 )

[node name="SoundHit" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )

[node name="SoundExplode" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 5 )

[node name="RayCastWallLeft" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( -22, 0 )

[node name="RayCastWallRight" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( 22, 0 )
